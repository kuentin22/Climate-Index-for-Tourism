if (grepl("^0\\.", x)) {
num <- as.numeric(x)
s <- formatC(num, digits = 3, format = "f")
return(gsub("\\.", ",", s))
}
# 3) Si és exactament "0.0"
if (x == "0.0") {
return("0")
}
# 4) Si té forma "X.Y" sense 'E+'
if (grepl("^\\d+\\.\\d+$", x)) {
num <- as.numeric(x)
s <- formatC(num, digits = 3, format = "f")
return(gsub("\\.", ",", s))
}
# 5) Cas general: molts punts
no_dots <- gsub("\\.", "", x)
if (no_dots == "0") return("0")
if (nchar(no_dots) < 5) {
num <- as.numeric(x)
return(as.character(num))
}
enters <- substr(no_dots, 1, 2)
decimals <- substr(no_dots, 3, 5)
return(paste0(enters, ",", decimals))
}
preprocess_value <- function(x) { # Eliminar punts i comes per comptar els dígits
no_punct <- gsub("[.,]", "", x)
# Si té exactament 17 dígits, eliminem el primer dígit
if (nchar(no_punct) == 17) {
# Eliminar el primer dígit
corrected <- substr(no_punct, 2, nchar(no_punct))
# Convertir a numèric per aplicar la lògica de format
num <- as.numeric(corrected)
# Retornar el valor sense canvis de separadors
return(as.character(num))
}
# Si no compleix la condició, retorna el valor original
return(x)
}
conv_valor <- function(x) {
# 1) Si conté 'E+' (notació científica)
if (grepl("E\\+", x)) {
s <- gsub(",", ".", x)
num <- as.numeric(s)
return(sub("\\.", ",", formatC(num, digits = 3, format = "f")))
}
# 2) Si comença per "0."
if (grepl("^0\\.", x)) {
num <- as.numeric(x)
s <- formatC(num, digits = 3, format = "f")
return(gsub("\\.", ",", s))
}
# 3) Si és exactament "0.0"
if (x == "0.0") {
return("0")
}
# 4) Si té forma "X.Y" sense 'E+'
if (grepl("^\\d+\\.\\d+$", x)) {
num <- as.numeric(x)
s <- formatC(num, digits = 3, format = "f")
return(gsub("\\.", ",", s))
}
# 5) Cas general: molts punts
no_dots <- gsub("\\.", "", x)
if (no_dots == "0") return("0")
if (nchar(no_dots) < 5) {
num <- as.numeric(x)
return(as.character(num))
}
enters <- substr(no_dots, 1, 2)
decimals <- substr(no_dots, 3, 5)
return(paste0(enters, ",", decimals))
}
for (any in 1981:1999) {
# Definim els noms dels fitxers d'entrada i sortida
fitxer_input <- paste0(ruta_input, "Taula_nuvolositat_", any, "_Andorra.xlsx")
fitxer_output <- paste0(ruta_output, "Taula_nuvolositat_", any, "_Andorra_CORREGIT.xlsx")
full_nom <- paste0("Taula_nuvolositat_", any, "_Andorra")
# Llegim el fitxer Excel
valors_bons <- read_excel(path = fitxer_input, sheet = full_nom)
# Apliquem la conversió a la columna percent_nuvolositat
valors_ori <- valors_bons[["percent_nuvolositat"]]
valors_character <- as.character(valors_ori)
valors_formatats <- sapply(valors_character, conv_valor)
# Substituïm la columna original per la columna formatada
valors_bons[["percent_nuvolositat"]] <- valors_formatats
# Guardem el fitxer corregit
write_xlsx(valors_bons, path = fitxer_output)
# Missatge per indicar el progrés
cat("✅ Fitxer de l'any", any, "processat i guardat com:", fitxer_output, "\n")
}
if (nchar(no_punct) == 17) {
# Eliminar el primer dígit
corrected <- substr(no_punct, 2, nchar(no_punct))
}
preprocess_value <- function(x) { # Eliminar punts i comes per comptar els dígits
no_punct <- gsub("[.,]", "", x)
# Si té exactament 17 dígits, eliminem el primer dígit
if (nchar(no_punct) == 17) {
# Eliminar el primer dígit
corrected <- substr(no_punct, 2, nchar(no_punct))
}}
conv_valor <- function(x) {
# 1) Si conté 'E+' (notació científica)
if (grepl("E\\+", x)) {
s <- gsub(",", ".", x)
num <- as.numeric(s)
return(sub("\\.", ",", formatC(num, digits = 3, format = "f")))
}
# 2) Si comença per "0."
if (grepl("^0\\.", x)) {
num <- as.numeric(x)
s <- formatC(num, digits = 3, format = "f")
return(gsub("\\.", ",", s))
}
# 3) Si és exactament "0.0"
if (x == "0.0") {
return("0")
}
# 4) Si té forma "X.Y" sense 'E+'
if (grepl("^\\d+\\.\\d+$", x)) {
num <- as.numeric(x)
s <- formatC(num, digits = 3, format = "f")
return(gsub("\\.", ",", s))
}
# 5) Cas general: molts punts
no_dots <- gsub("\\.", "", x)
if (no_dots == "0") return("0")
if (nchar(no_dots) < 5) {
num <- as.numeric(x)
return(as.character(num))
}
enters <- substr(no_dots, 1, 2)
decimals <- substr(no_dots, 3, 5)
return(paste0(enters, ",", decimals))
}
# Bucle per processar els fitxers des de 1981 fins a 1999
for (any in 1981:1999) {
# Definim els noms dels fitxers d'entrada i sortida
fitxer_input <- paste0(ruta_input, "Taula_nuvolositat_", any, "_Andorra.xlsx")
fitxer_output <- paste0(ruta_output, "Taula_nuvolositat_", any, "_Andorra_CORREGIT.xlsx")
full_nom <- paste0("Taula_nuvolositat_", any, "_Andorra")
# Llegim el fitxer Excel
valors_bons <- read_excel(path = fitxer_input, sheet = full_nom)
# Apliquem la conversió a la columna percent_nuvolositat
valors_ori <- valors_bons[["percent_nuvolositat"]]
valors_character <- as.character(valors_ori)
valors_formatats <- sapply(valors_character, conv_valor)
# Substituïm la columna original per la columna formatada
valors_bons[["percent_nuvolositat"]] <- valors_formatats
# Guardem el fitxer corregit
write_xlsx(valors_bons, path = fitxer_output)
# Missatge per indicar el progrés
cat("✅ Fitxer de l'any", any, "processat i guardat com:", fitxer_output, "\n")
}
fitxers_excel <- list.files(path = ruta_input, pattern = "\\.xlsx$", full.names = TRUE)
# Funció per eliminar el primer dígit si té exactament 17 dígits
eliminar_primer_digit <- function(x) {
# Eliminar punts i comes per comptar els dígits
x_sense_punts <- gsub("[.,]", "", x)
# Si té exactament 17 dígits, eliminar el primer dígit
if (nchar(x_sense_punts) == 17 && grepl("^\\d{17}$", x_sense_punts)) {
x_sense_punts <- substr(x_sense_punts, 2, nchar(x_sense_punts))  # Eliminar el primer dígit
# Tornar a afegir els punts com separadors de milers
x_formatat <- format(as.numeric(x_sense_punts), big.mark = ".", scientific = FALSE)
return(x_formatat)
}
# Si no compleix la condició, es retorna el valor original
return(x)
}
# Iterem sobre tots els fitxers Excel
for (fitxer in fitxers_excel) {
print(paste("Processant:", fitxer))
# Llegim el fitxer Excel (assumim que la primera pestanya conté les dades)
dades <- read_excel(fitxer)
# Comprovem si existeix la columna 'percent_nuvolositat'
if ("percent_nuvolositat" %in% colnames(dades)) {
# Apliquem la funció per corregir els valors amb 17 dígits
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, eliminar_primer_digit)
# Guardem el fitxer corregit (sobreescrivint o canviant el nom)
fitxer_sortida <- fitxer  # Sobreescriure el mateix fitxer
write_xlsx(dades, path = fitxer_sortida)
print(paste("✅ Fitxer corregit:", fitxer_sortida))
} else {
print(paste("⚠️ No s'ha trobat la columna 'percent_nuvolositat' a:", fitxer))
}
}
eliminar_primer_digit <- function(x) {
# Eliminar punts i comes per comptar els dígits
x_sense_punts <- gsub("[.,]", "", x)
# Si té exactament 17 dígits, eliminar el primer dígit
if (nchar(x_sense_punts) == 17 && grepl("^\\d{17}$", x_sense_punts)) {
x_sense_punts <- substr(x_sense_punts, 2, nchar(x_sense_punts))  # Eliminar el primer dígit
# Tornar a afegir els punts com separadors de milers
x_formatat <- format(as.numeric(x_sense_punts), big.mark = ".", scientific = FALSE)
return(x_formatat)
}
# Si no compleix la condició, es retorna el valor original
return(x)
}
# Iterem sobre tots els fitxers Excel
for (fitxer in fitxers_excel) {
print(paste("Processant:", fitxer))
# Llegim el fitxer Excel (assumim que la primera pestanya conté les dades)
dades <- read_excel(fitxer)
# Comprovem si existeix la columna 'percent_nuvolositat'
if ("percent_nuvolositat" %in% colnames(dades)) {
# Apliquem la funció per corregir els valors amb 17 dígits
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, eliminar_primer_digit)
# Guardem el fitxer corregit (sobreescrivint o canviant el nom)
fitxer_sortida <- fitxer  # Sobreescriure el mateix fitxer
write_xlsx(dades, path = fitxer_sortida)
print(paste("✅ Fitxer corregit:", fitxer_sortida))
} else {
print(paste("⚠️ No s'ha trobat la columna 'percent_nuvolositat' a:", fitxer))
}
}
eliminar_primer_digit <- function(x) {
# Eliminar punts i comes per comptar els dígits
x_sense_punts <- gsub("[.,]", "", x)
# Si té exactament 17 dígits, eliminar el primer dígit
if (nchar(x_sense_punts) == 17 && grepl("^\\d{17}", x_sense_punts)) {
x_sense_punts <- substr(x_sense_punts, 2, nchar(x_sense_punts))  # Eliminar el primer dígit
# Tornar a afegir els punts com separadors de milers
x_formatat <- format(as.numeric(x_sense_punts), big.mark = ".", scientific = FALSE)
return(x_formatat)
}
# Si no compleix la condició, es retorna el valor original
return(x)
}
# Iterem sobre tots els fitxers Excel
for (fitxer in fitxers_excel) {
print(paste("Processant:", fitxer))
# Llegim el fitxer Excel (assumim que la primera pestanya conté les dades)
dades <- read_excel(fitxer)
# Comprovem si existeix la columna 'percent_nuvolositat'
if ("percent_nuvolositat" %in% colnames(dades)) {
# Apliquem la funció per corregir els valors amb 17 dígits
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, eliminar_primer_digit)
# Guardem el fitxer corregit (sobreescrivint o canviant el nom)
fitxer_sortida <- fitxer  # Sobreescriure el mateix fitxer
write_xlsx(dades, path = fitxer_sortida)
print(paste("✅ Fitxer corregit:", fitxer_sortida))
} else {
print(paste("⚠️ No s'ha trobat la columna 'percent_nuvolositat' a:", fitxer))
}
}
fitxers_excel <- list.files(
path = ruta_input,
pattern = "^(?!~\\$).*\\.xlsx$",
full.names = TRUE,
ignore.case = TRUE
)
# Llista de tots els fitxers Excel a la carpeta
fitxers_excel <- list.files(path = ruta_input, pattern = "\\.xlsx", full.names = TRUE)
fitxers_excel <- list.files(path = ruta_input, pattern = "\\.xlsx", full.names = TRUE)
# Funció per eliminar el primer dígit si té exactament 17 dígits
eliminar_primer_digit <- function(x) {
# Eliminar punts i comes per comptar els dígits
x_sense_punts <- gsub("[.,]", "", x)
# Si té exactament 17 dígits, eliminar el primer dígit
if (nchar(x_sense_punts) == 17 && grepl("^\\d{17}", x_sense_punts)) {
x_sense_punts <- substr(x_sense_punts, 2, nchar(x_sense_punts))  # Eliminar el primer dígit
# Tornar a afegir els punts com separadors de milers
x_formatat <- format(as.numeric(x_sense_punts), big.mark = ".", scientific = FALSE)
return(x_formatat)
}
# Si no compleix la condició, es retorna el valor original
return(x)
}
# Iterem sobre tots els fitxers Excel
for (fitxer in fitxers_excel) {
print(paste("Processant:", fitxer))
# Llegim el fitxer Excel (assumim que la primera pestanya conté les dades)
dades <- read_excel(fitxer)
# Comprovem si existeix la columna 'percent_nuvolositat'
if ("percent_nuvolositat" %in% colnames(dades)) {
# Apliquem la funció per corregir els valors amb 17 dígits
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, eliminar_primer_digit)
# Guardem el fitxer corregit (sobreescrivint o canviant el nom)
fitxer_sortida <- fitxer  # Sobreescriure el mateix fitxer
write_xlsx(dades, path = fitxer_sortida)
print(paste("✅ Fitxer corregit:", fitxer_sortida))
} else {
print(paste("⚠️ No s'ha trobat la columna 'percent_nuvolositat' a:", fitxer))
}
}
print("🚀 Processament finalitzat per a tots els fitxers.")
library(tidyverse)
library(readxl)
library(writexl)
ruta_input <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Originals/"
ruta_output <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Corregits/"
library(tidyverse)
library(readxl)
library(writexl)
ruta_input <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Originals/"
ruta_output <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Corregits/"
neteja_data <- function(data) {
return(sub(" .*", "", data))  # Elimina tot després de l'espai
}
formata_nuvolositat <- function(x) {
# Eliminar punts i comes per comptar els dígits
x_sense_punts <- gsub("[.,]", "", x)
# Si té més de 10 dígits, convertir-lo a milers amb 3 decimals
if (nchar(x_sense_punts) > 10) {
num <- as.numeric(x_sense_punts)
return(formatC(num / 1e15, digits = 3, format = "f", decimal.mark = ","))
}
# Retornar el valor original si no cal formatar
return(x)
}
for (any in 1981:1999) {
fitxer_input <- paste0(ruta_input, "Taula_nuvolositat_", any, "_Andorra.xlsx")
fitxer_output <- paste0(ruta_output, "Taula_nuvolositat_", any, "_Andorra_CORREGIT.xlsx")
full_nom <- paste0("Taula_nuvolositat_", any, "_Andorra")
# Llegim el fitxer Excel
dades <- read_excel(path = fitxer_input, sheet = full_nom)
# 1️⃣ Netejar la columna 'date'
dades$date <- sapply(dades$date, neteja_data)
# 2️⃣ Formatar la columna 'percent_nuvolositat'
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, formata_nuvolositat)
# Guardem el fitxer corregit a la carpeta "Corregits"
write_xlsx(dades, path = fitxer_output)
# Missatge per indicar el progrés
cat("✅ Fitxer de l'any", any, "processat i guardat com:", fitxer_output, "\n")
}
sheets <- excel_sheets(fitxer_input)
print(sheets)
for (any in 1981:1999) {
fitxer_input <- paste0(ruta_input, "Sheet1_", any, "_Andorra.xlsx")
fitxer_output <- paste0(ruta_output, "Sheet1_", any, "_Andorra_CORREGIT.xlsx")
full_nom <- paste0("Sheet1_", any, "_Andorra")
# Llegim el fitxer Excel
dades <- read_excel(path = fitxer_input, sheet = full_nom)
# 1️⃣ Netejar la columna 'date'
dades$date <- sapply(dades$date, neteja_data)
# 2️⃣ Formatar la columna 'percent_nuvolositat'
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, formata_nuvolositat)
# Guardem el fitxer corregit a la carpeta "Corregits"
write_xlsx(dades, path = fitxer_output)
# Missatge per indicar el progrés
cat("✅ Fitxer de l'any", any, "processat i guardat com:", fitxer_output, "\n")
}
ruta_input <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Originals/"
ruta_output <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Corregits/"
# Creem la carpeta de sortida si no existeix
if (!dir.exists(ruta_output)) {
dir.create(ruta_output)
}
# Funció per netejar la columna 'date' (eliminar la part de l'hora)
neteja_data <- function(data) {
return(sub(" .*", "", data))  # Elimina tot després de l'espai
}
# Funció per formatar 'percent_nuvolositat'
formata_nuvolositat <- function(x) {
x_sense_punts <- gsub("[.,]", "", x)  # Eliminar punts i comes
# Si té més de 10 dígits, convertir-lo a milers amb 3 decimals
if (nchar(x_sense_punts) > 10) {
num <- as.numeric(x_sense_punts)
return(formatC(num / 1e15, digits = 3, format = "f", decimal.mark = ","))
}
return(x)  # Retornar el valor original si no cal formatar
}
# Bucle per processar els fitxers des de 1981 fins a 1999
for (any in 1981:1999) {
fitxer_input <- paste0(ruta_input, "Sheet1_", any, "_Andorra.xlsx")
fitxer_output <- paste0(ruta_output, "Sheet1_", any, "_Andorra_CORREGIT.xlsx")
# Verifiquem si el fitxer existeix
if (file.exists(fitxer_input)) {
# Llegim el fitxer Excel de la fulla 'Sheet1'
dades <- read_excel(path = fitxer_input, sheet = "Sheet1")
# 1️⃣ Netejar la columna 'date'
dades$date <- sapply(dades$date, neteja_data)
# 2️⃣ Formatar la columna 'percent_nuvolositat'
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, formata_nuvolositat)
# Guardem el fitxer corregit a la carpeta "Corregits"
write_xlsx(dades, path = fitxer_output)
# Missatge per indicar el progrés
cat("✅ Fitxer de l'any", any, "processat i guardat com:", fitxer_output, "\n")
} else {
cat("⚠️ Fitxer no trobat per l'any:", any, "\n")
}
}
print("🚀 Processament finalitzat per a tots els fitxers.")
library(tidyverse)
library(readxl)
library(writexl)
ruta_input <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Originals/"
ruta_output <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Corregits/"
# Creem la carpeta de sortida si no existeix
if (!dir.exists(ruta_output)) {
dir.create(ruta_output)
}
# Funció per netejar la columna 'date' (eliminar la part de l'hora)
neteja_data <- function(data) {
return(sub(" .*", "", data))  # Elimina tot després de l'espai
}
# Funció per formatar 'percent_nuvolositat'
formata_nuvolositat <- function(x) {
x_sense_punts <- gsub("[.,]", "", x)  # Eliminar punts i comes
# Si té més de 10 dígits, convertir-lo a milers amb 3 decimals
if (nchar(x_sense_punts) > 10) {
num <- as.numeric(x_sense_punts)
return(formatC(num / 1e15, digits = 3, format = "f", decimal.mark = ","))
}
return(x)  # Retornar el valor original si no cal formatar
}
# Bucle per processar els fitxers des de 1981 fins a 1999
for (any in 1981:1999) {
# Noms dels fitxers d'entrada i sortida
fitxer_input <- paste0(ruta_input, "Taula_nuvolositat_", any, "_Andorra.xlsx")
fitxer_output <- paste0(ruta_output, "Taula_nuvolositat_", any, "_Andorra_CORREGIT.xlsx")
# Verifiquem si el fitxer existeix
if (file.exists(fitxer_input)) {
# Llegim el fitxer Excel de la fulla 'Sheet1'
dades <- read_excel(path = fitxer_input, sheet = "Sheet1")
# 1️⃣ Netejar la columna 'date'
dades$date <- sapply(dades$date, neteja_data)
# 2️⃣ Formatar la columna 'percent_nuvolositat'
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, formata_nuvolositat)
# Guardem el fitxer corregit a la carpeta "Corregits"
write_xlsx(dades, path = fitxer_output)
# Missatge per indicar el progrés
cat("✅ Fitxer de l'any", any, "processat i guardat com:", fitxer_output, "\n")
} else {
cat("⚠️ Fitxer no trobat per l'any:", any, "\n")
}
}
print("🚀 Processament finalitzat per a tots els fitxers.")
library(tidyverse)
library(readxl)
library(writexl)
ruta_input <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Originals/"
ruta_output <- "C:/Users/aquintana/Desktop/ARI/CIT/Nuvolositat_ERA5/Corregits/"
neteja_data <- function(data) {
return(sub(" .*", "", data))  # Elimina tot després de l'espai
}
formata_nuvolositat <- function(x) {
x_sense_punts <- gsub("[.,]", "", x)  # Eliminar punts i comes
# Si té més de 10 dígits, convertir-lo a milers amb 3 decimals
if (nchar(x_sense_punts) > 10) {
num <- as.numeric(x_sense_punts)
return(formatC(num / 1e12, digits = 3, format = "f", decimal.mark = ","))
}
return(x)  # Retornar el valor original si no cal formatar
}
# Bucle per processar els fitxers des de 1981 fins a 1999
for (any in 1981:1999) {
# Noms dels fitxers d'entrada i sortida
fitxer_input <- paste0(ruta_input, "Taula_nuvolositat_", any, "_Andorra.xlsx")
fitxer_output <- paste0(ruta_output, "Taula_nuvolositat_", any, "_Andorra_CORREGIT.xlsx")
# Verifiquem si el fitxer existeix
if (file.exists(fitxer_input)) {
# Llegim el fitxer Excel de la fulla 'Sheet1'
dades <- read_excel(path = fitxer_input, sheet = "Sheet1")
# 1️⃣ Netejar la columna 'date'
dades$date <- sapply(dades$date, neteja_data)
# 2️⃣ Formatar la columna 'percent_nuvolositat'
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, formata_nuvolositat)
# 3️⃣ Eliminar la columna '.geo' si existeix
if (".geo" %in% colnames(dades)) {
dades <- dades %>% select(-.geo)
}
# Guardem el fitxer corregit a la carpeta "Corregits"
write_xlsx(dades, path = fitxer_output)
# Missatge per indicar el progrés
cat("✅ Fitxer de l'any", any, "processat i guardat com:", fitxer_output, "\n")
} else {
cat("⚠️ Fitxer no trobat per l'any:", any, "\n")
}
}
print("🚀 Processament finalitzat per a tots els fitxers.")
formata_nuvolositat <- function(x) {
x_sense_punts <- gsub("[.,]", "", x)  # Eliminar punts i comes
# Si té més de 10 dígits, convertir-lo a milers amb 3 decimals
if (nchar(x_sense_punts) > 10) {
num <- as.numeric(x_sense_punts)
return(formatC(num / 1e18, digits = 3, format = "f", decimal.mark = ","))
}
return(x)  # Retornar el valor original si no cal formatar
}
# Bucle per processar els fitxers des de 1981 fins a 1999
for (any in 1981:1999) {
# Noms dels fitxers d'entrada i sortida
fitxer_input <- paste0(ruta_input, "Taula_nuvolositat_", any, "_Andorra.xlsx")
fitxer_output <- paste0(ruta_output, "Taula_nuvolositat_", any, "_Andorra_CORREGIT.xlsx")
# Verifiquem si el fitxer existeix
if (file.exists(fitxer_input)) {
# Llegim el fitxer Excel de la fulla 'Sheet1'
dades <- read_excel(path = fitxer_input, sheet = "Sheet1")
# 1️⃣ Netejar la columna 'date'
dades$date <- sapply(dades$date, neteja_data)
# 2️⃣ Formatar la columna 'percent_nuvolositat'
dades$percent_nuvolositat <- sapply(dades$percent_nuvolositat, formata_nuvolositat)
# 3️⃣ Eliminar la columna '.geo' si existeix
if (".geo" %in% colnames(dades)) {
dades <- dades %>% select(-.geo)
}
# Guardem el fitxer corregit a la carpeta "Corregits"
write_xlsx(dades, path = fitxer_output)
# Missatge per indicar el progrés
cat("✅ Fitxer de l'any", any, "processat i guardat com:", fitxer_output, "\n")
} else {
cat("⚠️ Fitxer no trobat per l'any:", any, "\n")
}
}
print("🚀 Processament finalitzat per a tots els fitxers.")
library(tidyverse)
library(readxl)
library(writexl)
